1/08/24
FUNCTIONS
______________
function : It is a block of code which is used to perfrom a specific task.

functions has been configured as
INBUILT FUNCTION:
1) Aggregate function
2) character function
3) Number functions
4) Date functions


Aggregate function
====================
It takes n number of inputs and  generates single outputs

Types of Aggregate functions
=============================
MAX(): This function is used to obtain the maximum value from the given column.
syntax: MAX(column_name);

MIN(): This function is used to obtain the minimum value from the given column.
syntax: MIN(column_name);

SUM(): This function is used to obtain the total value from the given column.
syntax: SUM(column_name);

AVG(): This function is used to obtain the avergae value from the given column.
syntax: AVG(column_name);

COUNT(): This function is used to obtain the number of rows from the given column.
syntax: COUNT(*/column_name);

Note: only COUNT(*) takes * as a arguments.
============================================================================
Characteristics of Aggregate functions.
==============================================
1) Aggregate functions execute grp by grp.
2) we cannot pass any other columns along with aggregate functions.
3) we cannot nest aggregate functions.
4) we cannot pass multiple columns along with aggregate functions.
5) we cannot pass aggregate functions inside WHERE clause.
6) GROPU BY> We can pass group by expression along with aggregate functions
7) Aggregate functions ignore null values.
==================================================================
51) WAQTD THE MAXIMUM SAL AND MIN SAL FROM EMPOLYEE TABLE.
SELECT MAX(SAL) , MIN(SAL) FROM EMP;

52) WAQTD THE TOTAL SAL GIVEN TO ALL SALESMAN
SELECT SUM(SAL) FROM EMP
WHERE JOB='SALESMAN';

53) WAQTD THE AVG SAL GIVEN TO EMP WHOSE NAME STARTS WITH  A OR K
SELECT AVG(SAL) FROM EMP 
WHERE FNAME LIKE 'A%' OR FNAME LIKE 'K%';

54) WAQTD THE TOTAL SAL MAX SAL, MIN SAL AND AVG SAL FROM EMP TABLE
SELECT SUM(SAL),MIN(SAL),MAX(SAL),AVG(SAL) FROM EMP;

55) WAQTD THE DOJ OF THE FIRST EMP IN THE COMPANY.
SELECT MIN(DOJ) FROM EMP;

56) WAQTD THE NUMBER OF EMPS WORKING IN THE COMPANY.
SELECT COUNT(*) FROM EMP;

57) WAQTD THE NUMBER OF DIFFERNT JOB ROLES AVAILBLE IN THE COMPANY
SELECT COUNT( DISTINCT JOB) FROM EMP;

58) WAQTD THE DIFFERNCE  BTW MAX SAL AND MIN DAL
 SELECT  MAX(SAL)-MIN(SAL) FROM EMP;

59)WAQTD THE NO OF EMPS WORKING IN DEPT 113.

SELECT COUNT(*) FROM EMP
WHERE DNO=113;

60) WAQTD THE NO OF EMPS WORKING IN DEPT 112 AND 111
SELECT COUNT(*) FROM EMP
WHERE DNO IN (112, 111);
=============================================================
GROUP BY CLAUSE
===============
IT IS USED TO GRP THE RECORDS.
SELECT aggregate_functions/ group_by_expression
FROM table_nmae
[WHERE filter_condition]
GROUP BY column_name;
         group_by_expression;

chatracterstics of group by clause.
===============================
1) It executes row by row.
2) GROUP BY Clause executes after FROM clause if there is no WHERE clause.
3) GROUP BY clause converts the row records into group records.
4)We can pass multiple columns inside GROUP BY clause.
5) After the execution columns inside GROUP BY clause.
6) We can display only aggregate functions and group by expression.

Note: The column which we pass as a agruments inside GROUP BY is know as group_by_expression.
=======================================================================
	
61) WAQTD THE NUM OF EMPS IN EACH DEPT.
SELECT COUNT(*),DNO FROM EMP
GROUP BY DNO;

62)WAQTD THE MAX SAL AND MIN SAL GIVEN IN EACH DEPT

SELECT MAX(SAL),MIN(SAL),DNO FROM EMP
GROUP BY DNO;

63) WAQTD THE NO OF EMPS WORKING IN EACH JOB ROLE.
SELECT COUNT(*),JOB FROM EMP
GROUP BY JOB;

64) WAQTD THE MAX AND MIN SAL GIVEN TO ALL THE SALESMAN OR DISPATCHER OR ACCOUNTANT IN EVERY DEPT.
SELECT MAX(SAL),MIN(SAL),DNO  FROM EMP
WHERE JOB IN ('SALESMAN','DISPATCHER','ACCOUNTANT') GROUP BY DNO;


65) WAQTD THE DOJ FIRST EMP AND LAST EMP IN EVERY DEPT
SELECT MAX(DOJ) FIRST_JOINER,MIN(DOJ) RECENTLY_JOINER,DNO FROM EMP
GROUP BY DNO;

66) WAQTD THE NUM OF EMP WHO R GETTING SAL > 350000 AND SAL<100000 IN EACH DEPT
SELECT COUNT(*),DNO FROM EMP
WHERE SAL>35000 AND SAL<100000 GROUP BY DNO;

67) WAQTD THE NO EMP WHO R GETTING SAL MORE THAN EQUAL TO 30000 AND maximum sal
LESS THAN EQUAL TO 150000 IN EACH DEPT.

SELECT COUNT(*),DNO FROM EMP
WHERE SAL>=30000 GROUP BY DNO
HAVING MAX(SAL)<=150000;
===============================================================================
2/08/24
=======
HAVING CLAUSE.
==========
1) It is used to filter the grp records.
SYNTAX:SELECT aggregate_functions/ group_by_expression
FROM table_nmae
[WHERE filter_condition]
GROUP BY column_name;
HAVING filter_group_condition;
=================================================
Characterstics of having clause.
===============================
1) Having clause executes group by group.
2) It is used to executes to filter the grp  conditions
3) It executes after the group by clause.
4) we can pass multiple grp conditions inside HAVING Clause.
====================================================================
68) WAQTD THE MAXIMUM SAL AND MIN SAL GIVEN TO ALL THE  EMP IN EACH DEPT IF THE AVG SAL IS LESS TAHN 70000.
SELECT MAX(SAL),MIN(SAL),DNO FROM EMP GROUP BY DNO
HAVING AVG(SAL)<70000;

69)WAQTD THE AVG SAL AND TOTAL SAL GIVEN IN EACH JOB ROLE IF THE JOB ROLE CONTAINS MORE THAN 2 WORKERS.
SELECT AVG(SAL),SUM(SAL),JOB FROM EMP
GROUP BY JOB HAVING COUNT(JOB) >2;


70)WAQTD THE MAX SAL GIVEN TO EACH EMP IF THE DEPT CONTAINS ATLEAST 4 EMPS IN THE DEPT
SELECT MAX(SAL),DNO FROM EMP
GROUP BY DNO HAVING COUNT(DNO)>=4;

71)WAQTD THE MAX DOB AND MIN DOB IF THE EMP WAS BORN DURING THE YEAR 1990 TO 19999 IN EACH DEPY
SELECT MAX(DOB),MIN(DOB),DNO FROM EMP
WHERE DOB BETWEEN '1990-01-01' AND '1999-12-31'
GROUP BY DNO;

72) WAQTD THE NO OF EMP WORKING IN EACH DEPT IF THE DEPT S MIN SAL IS MORE THAN 32000
AND MAX SAL LESS THAN 150000

SELECT COUNT(*),DNO FROM EMP
GROUP BY DNO HAVING MIN(SAL)>32000 AND MAX(SAL)<=150000;

73) WAQTD THE NO OF EMP WHO R GETTING SAME SAL
SELECT COUNT(*),SAL FROM EMP
GROUP BY SAL HAVING COUNT(SAL)>=2;

74) WAQTD THE NO OF EMP WHO R GETTING SAME SAL AND WORKING IN SAME DEPT
SELECT COUNT(*),SAL,DNO FROM EMP
GROUP BY SAL,DNO HAVING COUNT(SAL)>=2 AND COUNT(DNO)>=2;

75) WAQTD THE NO OF EMP REPORTING TO EACH MGR;
SELECT COUNT(*),MGR FROM EMP
GROUP BY MGR HAVING COUNT(*)>1;

76)WAQTD THE NO OF EMP WHO HAVE SAME GENDER AND WORKING IN SAME DEPT
SELECT COUNT(*),GENDER,DNO FROM EMP
GROUP BY GENDER,DNO HAVING COUNT(*)>1;
========================================================================================

ORDER BY: IT IS USED TO ARRANGE THE RECORDS EITHER IN ASCENDING OR DESCENDING ORDER BASED ON SPECIFIC COLUMN.
========
CHARACTERSTICS OF ORDER BY CLAUSE:
=================================
1)IT IS THE LAST EXECUTABLE CLAUSE.
2) IT EXECUTES AFTER THE SELECT CLAUSE.
3) BY DEFAULT , ALL THE TABLES BY DEFAULT WILL BE ARRANGED BASED ON PRIMAMRY KEY
4) WE CAN PASS MULTIPLE COLUMNS INSIDE ORDER BY CLASUE.

77) WAQTD THE DEATILS OF EMPS ACCORDING TO THEIR SAL FROM MAX TO MIN 
SELECT * FROM EMP
ORDER BY SAL DESC;

78) WAQTD THE EMP FNAME,LNAME,IF THE EMP IS WORKING AS SALESAMN OR DEVELOPER OR TESTER OR DISPATCHER.
ARRANGE THE RECORDS BASED ON THEIR FNAME IN ALPHABETICAL ORDER.

SELECT FNAME,LNAME FROM EMP
WHERE JOB IN ('SALESMAN','DEVELOPER','DISPATCHER','TESTER')
ORDER BY FNAME ASC;

79)WAQTD THE NUM OF EMPS WHO R GETTING SAME SAL AND WORKING IN SAME JOB ROLE IF THE EMP SAL IS MORE THAN 30000. ARRANGE THE RECORDS BASED ON THEIR 
SAL.

SELECT COUNT(*),SAL,JOB FROM EMP
GROUP BY SAL,JOB HAVING COUNT(*)>1 AND SAL>30000 ORDER BY SAL;
================================
05/08/24
=====================================================================================
80) WAQTD THE FIRST 3 RECORDS FROM THE EMP TABLE.
SELECT * FROM EMP
LIMIT 3;
LIMIT AND OFFSET
================
IT IS USED TO RETURN THE SPECFIED NO OF ROWS.
OFFSET IS USED TO IGNORE SPECIFED NO OF RECORDS.
SYNTAX: LIMIT  no_of_rows_to_return
===========================================================
81. WAQTD THE FIRST 5 RECORDS FROM EMP TABLE.
SELECT * FROM EMP
LIMIT 5;

82. WAQTD THE FIRST 1 RECORDS FROM EMP TABLE.
SELECT * FROM EMP
LIMIT 1;

83.WAQTD THE 2ND RECORDS FROM EMP TABLE.
SELECT * FROM EMP
LIMIT 1 OFFSET 1;

84.WAQTD THE 5TH RECORD FROM EMP TABLE
SELECT * FROM EMP
LIMIT 1 OFFSET 4;

85.WAQTD THE 7TH RECORD FROM EMP TABLE
SELECT * FROM EMP
LIMIT 1 OFFSET 6;

86.WAQTD THE 6TH AND 7TH RECORD FROM EMP TABLE
SELECT * FROM EMP
LIMIT 2 OFFSET 5;

87. WAQTD THE FIRST 5 MAX SAL HOLDERS
SELECT SAL FROM EMP
ORDER BY SAL DESC
LIMIT 5;

88.WAQTD THE 6TH MAX SAL.(DISPLAY ONLY SAL)
SELECT DISTINCT SAL FROM EMP
ORDER BY SAL DESC
LIMIT 1 OFFSET 5;

89. WAQTD THE 7TH MAX SAL.
SELECT DISTINCT SAL FROM EMP
ORDER BY SAL DESC
LIMIT 1 OFFSET 6;

90. WAQTD THE FIRST FIVE EMP WHO R HIRED
SELECT * FROM EMP
LIMIT 5;

91.WAQTD THE LAST FIVE RECORDS

SELECT * FROM EMP
ORDER BY EID DESC 
LIMIT 5;

92.WAQTD THE LAST 3RD RECORD FROM EMP TABLE.
SELECT * FROM EMP
ORDER BY EID DESC
LIMIT 1 OFFSET 2;

93.WAQTD THE 5TH MIN SAL.
SELECT DISTINCT * FROM EMP
ORDER BY SAL ASC
LIMIT 1 OFFSET 4;

cHARACTER FUNCTION.
======================
1. UPPER(): This function is used to convert the strng values to UPPER case.
Synatx: SLECT UPPER('pentagon')

2. LOWER(): This function is used to convert the strng values to LOWER case.
Synatx: SLECT LOWER('PENTAGON')

3.LENGTH(): This function is used to OBTAINED THE LENGTH OF THE GIVEN STRING.
Synatx: SELECT LENGTH('PENTAGON') 

4.REVERSE(): This function is used to reverse the given sting.
syntax: SELECT REVERSE('pentagon')

5.CONTACT():This function is used to combine the given sting.
syntax: SELECT CONATCT('str1','str2',...)

6. ***SUBSTR(): This Function is use to obtain the part of  a string 
syntax: SUBSTR('original_string',Postion[,length]);
========================================================================
5/08/24
===============
94. WAQTD THE FULL NAME OF EMP AND ARRANGE THE NAME ACCORDING TO ALPHBETICAL ORDER.
SELECT CONCAT(FNAME,' ',LNAME) FULL_NAME 
FROM EMP
ORDER BY FULL_NAME ASC;
=========================================================================

95.WAQTD WHOESE NAME STARTS WITH S USING SUBSTR.
SELECT * FROM EMP
WHERE SUBSTR(FNAME,1,1)='S';

96.WAQTD THE FNAME,LNAME OF EMP WHOSE FNAME STATS WITH S OR A.
SELECT FNAME,LNAME FROM EMP
WHERE SUBSTR(FNAME,1,1) IN ('S','A');

97. WAQTD THE FNAME FROM EMP WHOSE FNAME ENDS WITH A.
SELECT FNAME FROM EMP
WHERE SUBSTR(FNAME,-1,1)='A';

98.WAQTD THE FNAME AND LNAME IF THE FNAME STARTS WITH VOWELS OR LAST NAME ENDS WITH OVELS
SELECT FNAME,LNAME FROM EMP
WHERE SUBSTR(FNAME,1,1) IN ('A','E','I','O','U') OR 
SUBSTR(LNAME,-1,1) IN  ('A','E','I','O','U');

99. WAQTD THE DEATILS OF EMP WHO WERE HIRED IN THE MONTH OF AUG,SEP OR OCT.
SELECT * FROM EMP
WHERE SUBSTR(DOJ,6,2) IN (08,09,10);

100. WAQTD THE FIRST HALF OF THE FNAME.
SELECT SUBSTR(FNAME,1,LENGTH(FNAME)/2 )FROM EMP;

101.WAQTD THE SECONDS HALF OF THE FNAME
SELECT SUBSTR(FNAME,LENGTH(FNAME)/2 +1) FROM EMP;

102. WAQTD THE FIRSTHALF OF FNAME IN LOWER CASE AND SECOND HALF IN UPPER REVERSE CASE.
SELECT CONCAT(LOWER(SUBSTR(FNAME,1,LENGTH(FNAME)/2)),
REVERSE(UPPER(SUBSTR(FNAME,LENGTH(FNAME)/2 +1)))) FROM EMP;

TELEGRAM.
=======================================================================================
SELECT CUSTOMERNAME, CONCAT(SUBSTR(CUSTOMER_NAME,1,3),
LENGTH(CUSTOMER_NAME),SUBSTR(PHONE_NUMBER,-3)) CUSTOMER_PASSWORD FROM CUSTOMER_TABLE 
ORDER BY CUSTOMER_NAME DESC;
=======================================================================================
7/08/24
=============
REPLACE FUNCTION- It is used to replace the substring with a new string from original string.
==============
syntax: REPLACE('original_string','substr','new-str');  
====================================================================
SELECT LENGTH('MALAYALAM')-LENGTH(REPLACE('MALAYALAM','A','')) ;

103. WAQTD THE DEATILS OF EMP IF THE EMP NAME CONTAINS ATLEAST 1  E WITHOUT USING LIKE OPERTOR.

SELECT * FROM EMP
WHERE LENGTH(FNAME)-LENGTH(REPLACE(FNAME,'E',''))>=1;

104.WAQTD THE EMP FNAME,LNAME IF THE EMP FNMAE CONTAINS ATLEAST 2 A IN IT
SELECT FNAME,LNAME FROM EMP
WHERE LENGTH(FNAME)-LENGTH(REPLACE(FNAME,'A',''))>=2;

105.WAQTD THE  EMP FNAME IF THE EMP FNMAE EXACTLY ONE A IN IT
SELECT FNAME,LNAME FROM EMP
WHERE LENGTH(FNAME)-LENGTH(REPLACE(FNAME,'A',''))=1;


NUMBER FUNCTION
====================
ABS(): THIS FUNCTION IS USED TO OBATIN THE NEGATIVE NUMBERS INTO POSSITIVE NUMBER .
SYNTAX: ABS(M);

MOD(); THI FUNCTION IS USED TO OBATIN THE REMAINDER OF THE GIVEN TWO NUMBERS
SYNTAX: MOD(m,n)

ROUND():THI FUNCTION IS USED TO ROUND OFF THE GIVEN FLOATING VALUES
SYNTAX: ROUND(m,n)

CEIL(): THIS FUNCTION IS USED TO OBATIN THE NEXT INTEGR VALUE FROM THE GIVEN DECIMAL NUMBER

FLOOR(): THIS FUN IS USED TO OBATIN THE CURRENT INTGER VALUE FROM THE GUVEN ECIMAL NUMBER

POW(): THIS FUNCTION IS USED TO OBATIN THE POWER OF THE GIVEN NUMBER.IT TAKES THE INTGER VALUE AND DEGREE VALUE AS AAGRUMENT.
EX: SELECT POW(3,4)

DATE FUNCTIONS:
===================
SYSDATE(): IT IS USED TO OBATIN CURRENT DATE AND TIME
SLECET SYSDATE();

CURRENTdATE(): IT IS USED TO OBTAIN THE CURRENT DATE
SELECT CURDATE();

DATEDIFF(): IT IS USED TO OBATIN THE DIFF BTW TWO DATE VALUES.
SELECT DATEDIFF(CURDATE(),'2024-05-07');

DATE_ADD(): THIS FUNCTION IS USED TO ADD THE TIME INTERVALS
SELECT DATE_ADD(SYSDATE(),INTERVAL 5 MINUTES);

DATE-SUB(): THIS FUNCTION IS USED TO SUBRACT THE TIME INTERVAL.
SELECT DATE_SUB(SYSDATE(),INTERVAL 5 HOUR);

DATE_FORMAT(): THIS FUNCTION IS USED TO COVERT THE DATE VALUES  INTO INDIVAUL
CHARCACTER BASED ON FORMAT MODEL.
SYNTAX: DATE_FORMAT(DATE_VALUE,'FORMAT-MODEL');

SELECT DATE_FORMAT(SYSDATE,%Y);


106.WAQTD THE DEATILS OF EMO WHO WERE HIRDE IN THE YEAR 2021 USING DATE_FORMAT()
SELECT * FROM EMP
WHERE DATE_FORMAT(DOJ,'%Y')=2021;

107. WAQTD THE FNAME,DOB FROM EMP WHO WERE BRON IN MAY,JULYAND AUGUST.
SELECT FNAME,DOB FROM EMP
WHERE DATE_FORMAT(DOB,'%M') IN ('MAY','JUNE','JULY','AUGUST');
==================================================================

108.WAQTD THE DEATILS OF EMP WHO WERE HIRED DURING EVEN DATES.
SELECT * FROM EMP 
WHERE MOD(DATE_FORMAT(DOJ,'%d'),2)=0;


109.WAQTD THE DEATILS OF EMP WHO WERE HIRED IN SAT AND SUNDAY.
SELECT * FROM EMP
WHERE DATE_FORMAT(DOJ,'%a') IN ('SAT','SUN');

110. WAQTD THE FNAME,DOB IN US FORMAT.

SELECT FNAME,DATE_FORMAT(DOB,'%m/%d/%Y') US_FORMAT
FROM EMP;

111.WAQTD THE DEATILS OF EMP WHO WERE HIRED DURING LEAP YEAR.
SELECT * FROM EMP
WHERE (MOD(DATE_FORMAT(DOJ, '%Y'), 4) = 0 AND MOD(DATE_FORMAT(DOJ, '%Y'), 100) != 0)
   OR (MOD(DATE_FORMAT(DOJ, '%Y'), 400) = 0);

112.WAQTD THE NUMBER OF EMPS HIRED DURING EVERY YEAR,
ARRANGE THE RECORDS BASED ON NO OF HIRING FROM MAX TO MIN.

SELECT COUNT(*) "NO.OF EMP", DATE_FORMAT(DOJ,'%Y') YEAR 
FROM EMP
GROUP BY DATE_FORMAT(DOJ,'%Y')
ORDER BY COUNT(*) DESC;

113.WAQTD THE FNAME,LNAME,JOB,DOJ AND NO .OF YEARS OF EMP,THE HAVING EXPERINCE.

SELECT FNAME,LNAME,JOB,DOJ,DATE_FORMAT(CURDATE(),'%Y')- DATE_FORMAT(DOJ,'%Y')  EXP
FROM EMP;

114.WAQTD THE NO OF EMP HIRE IN EACH MONTH in asc order(jan-dec).

SELECT  COUNT(*),DATE_FORMAT(DOJ,'%M') MONTH 
FROM EMP  
GROUP BYDATE_FORMAT(DOJ,'%M'), DATE_FORMAT(DOJ,'%m')
ORDER BY  DATE_FORMAT(DOJ,'%m') ; 
