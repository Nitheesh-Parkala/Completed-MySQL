JOINS
====
JOINS ARE USED TO RETRIVE THE DATA FROM MULTIPLE TABLES SIMULTANEOUSLY.

TYPES OF JOINS
=============
1) CARTESIAN JOINS OR CROSS JOIN (NOT IN USE)
2) INNER JOIN
3)SELF JOIN
4)OUTER JOIN
->LEFT OUTER JOIN
->RIGHT OUTER JOIN
->FULL OUTER JOIN
NATURAL JOIN (NOT IN USE)

CARTESIAN JOINS OR CROSS JOIN 
================================
THE RECORDS OF TABLE  1 WILL BE MERGED WITH THR RECORDS OF TABLE 2.

IN CROSS JOINS,
1) THE NUMBER OF COLUMNS GENERATED =T1+T2
2) THE NUMBER OF ROWS GENERATED =T1*T2

SELECT * FROM EMP CROSS JOIN DEPT;

DRAW BACKS
==========
WE GET MORE NO OF ERROR RECORDS OR INVALID RECORDS WHEN COMPARED TO VALID RECORDS.
=========================================================================================
INNER JOINS
==========
1) IT IS USED TO OBTAIN ONLY THE MATCHED RECORDS.

EX. WAQTD THE EMP AND HIS DEPT DEATILS

SELECT * FROM EMP INNER JOIN DEPT ON EMP.DNO=DEPT.DNO;

166.WAQTD THE EMP FIRSTNAME ALONG WITH HIS DEPT NAME.

SELECT FNAME,DNAME FROM EMP INNER JOIN DEPT ON EMP.DNO=DEPT.DNO;

167.WAQTD THE CUSTOMER FIRSTNAME ALONG WITH HIS LOCATION.

SELECT FIRST_NAME,LOCATION FROM CUSTOMER C1 INNER JOIN LOCATION L1 ON C1.LID=L1.LID;

168.WAQTD THE EMP FIRST_NAME ,LNAME ,JOB ALONG WITH HIS DEPT NAME IF THE EMP IS WORKING IN MARKETING DEPT.

SELECT FNAME,LNAME,JOB,DNAME FROM EMP E1 INNER JOIN DEPT D1 ON E1.DNO=D1.DNO WHERE DNAME='MARKETING';

169.WAQTD THE EMP FIRSTNAME,LNAME IF THE EMP AS DEVLIVRED ANY PRODUCT.

SELECT DISTINCT FNAME,LNAME FROM EMP E1 INNER JOIN ORDERS O1 ON E1.EID=O1.EID;

170.WAQTD THE EMP FIRSTNAME,LNAME,DNO ALONG WITH DNAME

SELECT E1.FNAME,E1.LNAME,E1.DNO,D1.DNAME FROM EMP E1
INNER JOIN DEPT D1 ON E1.DNO=D1.DNO;

171.WAQTD THE CUSTOMER FNAME,LNAME ORDER ID 
IF CUSTOMER AS ORDERD ANY PRODUCT.

SELECT C1.FIRST_NAME,C1.LAST_NAME,O1.ORDER_ID FROM CUSTOMER C1 
INNER JOIN ORDERS O1 WHERE C1.CID= O1.CID;


172.WQTD EMP FNAME,HIS DEPT NAME ALONG WITH WORKING LOCATION.

SELECT E1.FNAME,D1.DNAME,L1.LOCATION FROM EMP E1
INNER JOIN DEPT D1
ON E1.DNO=D1.DNO INNER JOIN LOCATION L1 ON D1.LID=L1.LID;


173. WAQTD THE CUSTOMER FULL NAME ,PRODUCT NAME ALONG WITH ORDER ID IF HE HAS ORDERED ANY PRODUCT.

SELECT CONCAT(C1.FIRST_NAME ,' ',C1.LAST_NAME),P1.P_NAME FROM CUSTOMER C1 INNER JOIN
ORDERS O1 
ON C1.CID= O1.CID INNER JOIN PRODUCT P1 
ON P1.PRODUCT_ID = O1.PRODUCT_ID;

174.WAQTD THE CUSTOMER FULL NAME,PRODUCT NAME,PRICE AS BILL ,ORDER _ID,O1.DELIVARY_DATE OF THE PRODUCT.

SELECT O1.ORDER_ID,CONCAT(C1.FIRST_NAME ,'',C1.LAST_NAME),
P1.PRICE  FROM CUSTOMER C1 INNER JOIN
ORDERS O1 
ON C1.CID= O1.CID INNER JOIN PRODUCT P1 
ON P1.PRODUCT_ID = O1.PRODUCT_ID;

175.WAQTD THE ORDER ID,CUSTOMER FULL NAME,PRODUCT NAME,PRICE AS BILL,DERLIVERY DATE OF THE PRODUCT ALONG WITH LOCATION,CITY AS ADDRESS.

SELECT O1.ORDER_ID,CONCAT(C1.FIRST_NAME ,'',C1.LAST_NAME),P1.P_NAME,P1.PRICE,O1.DELIVARY_DATE,L1.LOCATION,L1.CITY  FROM CUSTOMER C1 INNER JOIN
ORDERS O1 
ON C1.CID= O1.CID INNER JOIN PRODUCT P1 
ON P1.PRODUCT_ID = O1.PRODUCT_ID INNER JOIN LOCATION L1 
ON C1.LID = L1.LID;

176.WAQTD THE ORDER_ID,CUSTOMER NAME WITH INITALS,PRODUCT NAME,DELIVERY DATE.ADDRESS,EMP FIRST NAME(WHO DELIVERED THE PRODUCT) AS DELIVERY_BOY IF HE HAS DELIVERED THE PRODUCT TO MUMBAI CITY.


SELECT O1.ORDER_ID,
CONCAT(C1.FIRST_NAME,'.',SUBSTR(C1.LAST_NAME,1,1)) CUSTOMER_NAME,
P1.P_NAME,P1.PRICE BILL,
O1.DELIVARY_DATE,CONCAT(L1.LOCATION,'',L1.CITY) ADDRESS,E1.FNAME DELIVERY_BOY FROM CUSTOMER C1 INNER JOIN
ORDERS O1
ON C1.CID=O1.CID INNER JOIN PRODUCT P1 
ON O1.PRODUCT_ID=P1.PRODUCT_ID INNER JOIN LOCATION L1 
ON C1.LID=L1.LID INNER JOIN EMP E1 
ON O1.EID=E1.EID
WHERE L1.CITY ='MUMBAI';
==============================================================================================================================================
177.WAQTD EMP NAME AND HIS MANAGER NAME.

SELECT E1.FNAME emp_name,E2.FNAME manager_name FROM EMP E1 JOIN 
EMP E2 ON E1.MGR=E2.EID;

178.WAQTD THE EMP FNAME,SAL,AMANGER FIRST AND HIS SAL.

SELECT E1.FNAME EMP_NAME,E1.SAL,E2.FNAME MANAGER_NAME,E2.SAL FROM EMP E1 JOIN
EMP E2 ON E1.MGR=E2.EID;

179.WQTD THE EMP FANME,EMP DOB ALONG WITH MANAGER FNAME AND HIS DOB IF THE EMP IS ELDER THEN HIS MANAGER.

SELECT E1.FNAME,E1.DOB,E2.FNAME,E2.DOB FROM EMP E1 JOIN 
EMP E2 ON E1.MGR=E2.EID WHERE  E1.DOB<E2.DOB;

180.WAQTD THE EMP FNAME,EMP GENEDER ALONG WITH MAGAER FNAME , MANAGER GENDER IF EMP AND MAANGER AS SAME GENEDER.
SELECT E1.FNAME,E1.GENDER,E2.FNAME,E2.GENDER FROM EMP E1 JOIN 
EMP E2 ON E1.MGR=E2.EID WHERE  E1.GENDER=E2.GENDER;

181.WAQTD EMP FNAME.HIS DEPT NAME ALONG WITH HIS MAANAGER NAME.

SELECT E1.FNAME,D1.DNAME,E2.FNAME FROM EMP E1 JOIN
DEPT D1 ON E1.DNO=D1.DNO JOIN EMP E2 ON E1.MGR=E2.EID;

182.WAQTD EMP FNAME,LNAME HIS DEPT NAME ,MANAGR NAME,LSATNAME ALONG WITH HIS DEPT NAME.


SELECT 
CONCAT(E1.FNAME,'',E1.LNAME,',',D1.DNAME) EMP_DATA,
CONCAT(E2.FNAME,'',E2.LNAME,',',D2.DNAME) MANAGER_DATA  FROM EMP E1 
INNER JOIN DEPT D1 
ON E1.DNO=D1.DNO JOIN EMP E2 
ON E1.MGR=E2.EID INNER JOIN DEPT D2
ON E2.DNO=D2.DNO;


183.WAQTD EMP FNAME,LNAME HIS DEPT NAME ,MANAGR NAME,LSATNAME ALONG WITH HIS DEPT NAME,AND DEPT LOCATION ALONG WITH MANAGER NAME AND MANAGER LOCATION AND DEPT LOCATION.

SELECT 
CONCAT(E1.FNAME,'',E1.LNAME,'(',D1.DNAME,'),',L1.LOCATION) EMP_DATA,
CONCAT(E2.FNAME,' ',E2.LNAME,'(',D2.DNAME,'),',L2.LOCATION) MANAGER_DATA  FROM EMP E1 
INNER JOIN DEPT D1 
ON E1.DNO=D1.DNO INNER JOIN LOCATION L1 
ON D1.LID=L1.LID 
JOIN EMP E2  
ON E1.MGR=E2.EID INNER JOIN  DEPT D2 
ON E2.DNO=D2.DNO  INNER JOIN LOCATION L2 ON D2.LID=L2.LID;

184.WAQTD THE EMP FNAME,DEPT NAME ALONG WITH MANAGER FNAME,DEPT NAME IF THE EMP AND MANAGER WORKS IN DEPT.

SELECT E1.FNAME,D1.DNAME,E2.FNAME,D2.DNAME FROM EMP E1 
INNER JOIN DEPT D1 ON E1.DNO=D1.DNO JOIN EMP E2 ON E1.MGR=E2.EID
INNER JOIN DEPT D2 ON E2.DNO=D2.DNO WHERE D1.DNAME=D2.DNAME;

======================================================================================
OUTER JOIN:
MATCHED RECORDS ALONG WITH UNMATCHED RECORDS.
===========================================
LEFT OUTER JOIN:-> USED TO OBATIN MATCHED AND UNMATCHED RECORD OF LEFT TABLE.
SYNTAX:->
SELECT column_name
FROM table_name 1 LEFT OUTER JOIN table_name 2
ON  table_name 1.column_name=table_name 2.column_name;

-----------------
RIGHT OUTER JOIN:-> USED TO OBATIN MATCHED AND UNMATCHED RECORD OF RIGHT TABLE.
SYNTAX:->
SELECT column_name
FROM table_name 1 RIGHT OUTER JOIN table_name 2
ON  table_name 1.column_name=table_name 2.column_name;
=================================================================================



SELECT A1.EMP FROM  A A1 RIGHT OUTER JOIN B  B1 
ON  A1.EMP=B1.EMP  WHERE A1.EMP IS NULL;

188.WAQTD THE LOCATION NAME WHERE NO CUSTOMER ARE AVIALBLE.

SELECT L1.LOCATION FROM LOCATION L1 LEFT OUTER JOIN CUSTOMER C1 
ON L1.LID=C1.CID WHERE C1.LID IS  NULL;

189.WAQTD THE CUSTOMER FULL NAME WHERE THEY HAVE NOT ORDED ANY THING SO FAR.
SELECT CONCAT(C1.FIRST_NAME,'',C1.LAST_NAME)FULL_NAME FROM ORDERS O1 RIGHT OUTER JOIN CUSTOMER C1
ON O1.CID=C1.CID  WHERE O1.CID IS NULL;

190.WAQTD THE LOCATION NAMES WITH CITY WHERE NO DEPTS ARE AVAILABLE IN THAT LOCATION.
SELECT L1.LOCATION,L1.CITY FROM LOCATION L1 LEFT OUTER JOIN DEPT D1
ON L1.LID=D1.LID  WHERE D1.LID IS NULL;

191.WAQTD THE TOP 3 CUSTOMER BASED ON THE AMOUNT THEY HAVE SPENT.
SELECT CONCAT(C1.FIRST_NAME,'',C1.LAST_NAME)FULL_NAME,SUM(P1.PRICE)TOTAL FROM CUSTOMER C1 
INNER JOIN ORDERS O1 
ON C1.CID=O1.CID
INNER JOIN PRODUCT P1 
ON O1.PRODUCT_ID=P1.PRODUCT_ID
GROUP BY C1.CID,CONCAT(C1.FIRST_NAME,'',C1.LAST_NAME)
ORDER BY TOTAL DESC LIMIT 3;

OR
SELECT CONCAT(C1.FIRST_NAME,'',C1.LAST_NAME)FULL_NAME,SUM(P1.PRICE)TOTAL FROM CUSTOMER C1 
INNER JOIN ORDERS O1 
ON C1.CID=O1.CID
INNER JOIN PRODUCT P1 
ON O1.PRODUCT_ID=P1.PRODUCT_ID
GROUP BY C1.CID,FULL_NAME
ORDER BY TOTAL DESC LIMIT 3;

192.WAQTD THE TOP 3 STATE WITH HIGHEST REVENUE GENRATED.
SELECT L1.STATE TOP_3, P1.PRICE REVENUE FROM LOCATION L1 INNER JOIN CUSTOMER C1 
ON C1.LID= L1.LID INNER JOIN ORDERS O1 
ON O1.CID=C1.CID INNER JOIN PRODUCT P1 
ON P1.PRODUCT_ID=O1.PRODUCT_ID 
GROUP BY L1.LID,TOP_3,REVENUE ORDER BY TOP_3 DESC LIMIT 3;

OR 

SELECT DISTINCT L1.STATE TOP_3, P1.PRICE REVENUE FROM PRODUCT P1 INNER JOIN ORDERS O1 
ON P1.PRODUCT_ID= O1.PRODUCT_ID INNER JOIN CUSTOMER C1 
ON C1.CID=O1.CID INNER JOIN LOCATION L1 
ON L1.LID=C1.LID
GROUP BY L1.LID,TOP_3,REVENUE ORDER BY TOP_3 DESC LIMIT 3;

==================================================================================================
NATURAL JOINS:-> IT USED TO OBATIAN THE MATCHED RECORDS BY IDENTFYING THE COMMAN COLUMN NAME PRESENT IN BOTH THE TABLE.
HERE NATURAL JOINS DEPENDS ON THE COLUMN NAME FOR MERGING THE TWO TABLES.
THE COMMAN COLUMN WILL BE DISPLAYED FIRST TABLE AND ONLY ONCE 

SYNTAX:
SELECT column_name
FROM table_name_1 NATURAL JOIN table_name_2;
===============

1)can we duplicate the table?
-yes,with a different name.
CREATE TABLE EMP_A AS(SELECT * FROM EMP);

2) CAN WE COPY THE STURCTURE OF THE TABLE?

CREATE TABLE table_name AS (SELECT satement with false condition);

CREATE TABLE EMP_B AS (SELECT * FROM  EMP WHERE 1=2);

3) HOW TO ADD A DATA FROM ONE TABLE TO ANTHORE TABLE.

 CREATE TABLE EMP_C
( ID INT,
NAME VARCHAR(30)
);
INSERT INTO EMP_C (SELECT EID,FNAME FROM EMP);


VIEW:
=====

SYNTAX: CREATE VIEW view_name AS (SELECT statement);
1) VIEWS ARE THE VIRTUAL TABLES.
2) THEY DONT REQUIRED ANY SPACES TO STORE IN DATABASE.
3) EVERY RESULTANT TABLES OBTAINED FROM DQL ARE VIEWS
4) VIEWS ARE USED TO OVERCOME THE PROBELMS OF SUB TABLES.


CREATE VIEW SALESMAN_DATA AS (SELECT * FROM EMP WHERE JOB='SALESMAN');
UPDATE SALESMAN_DATA SET SAL= SAL+1000 WHERE JOB='SALESMAN'; # IT WILL EFFECT ALL THE SAL OF THE SALESMAN IF WE WANT TO EFFECT FOR PARTICURLA NAME THEN WE HAVE HAVE USE WHERE FNAME='column_name';
=============================================================================
CREATION OF A USER IN MYSQL
=============================
SYNTAX:
CREATE USER 'user_name'@'localhost' IDENTIFIED BY 'paasword';


SELECT USER();
+----------------+
| user()         |
+----------------+
| root@localhost |
+----------------+

CREATE USER 'nitheesh'@'localhost' IDENTIFIED BY 'n123';
SELECT USER();
+--------------------+
| USER()             |
+--------------------+
| nitheesh@localhost |
+--------------------+


C:\Program Files\MySQL\MySQL Server 8.0\bin




