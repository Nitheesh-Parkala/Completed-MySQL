STORED PROCEDURE
================
1) STORED PROCEDURE ARE THE PREPARED SQL QUERY THAT WILL BE SAVED FOR MULTIPLE USAGE OF THAT PARTICULAR QUERY.
(MEANS WE ALREADY WRITTEN THE QUERY AND STORED INSIDE THE PROCEDURE AND WHEN WE WANT THIS QUERY WE CAN CALL THE PROCEDURES)
2) USING STORED PROCEDURES, THE EXECUTION OF THE QUERIES WILL BE MADE FASTER.
3) WE CAN CREATE A PROCEDURE BY PASSING THE PARAMETERS AS WELL.
MYSQL
=====
SYNTAX FOR CREATING THE PROCEDURE:
=====================================
DELIMITER//--DEFAULT delimiter is;
CREATE PROCEDURE procedure_name(in|out|inout parameters)
BEIGN
---query
END
//

CREATE DATABASE P_DEMO;
USE P_DEMO;

EXAMPLE: CREATE TABLE OF STIDENT.

CREATE TABLE STUDENT(
 ID INT PRIMARY KEY,
 NAME VARCHAR(20) NOT NULL,
 C_NAME VARCHAR(20) NOT NULL,
 MARKS DECIMAL(10,3)
);


CREATE A PROCEDURE TO ADD  A RECORD AND DISPLAY IT FROM THE TABLE.

DELIMITER// -> INSTEAD OF ; I WILL TAKE DELIMITER AS //.
MEANS: SELECT * FROM STUDENT //

CREATE PROCEDURE add_student(IN SID INT,IN NAME VARCHAR(20),IN COLLEGE_NAME VARCHAR(20),IN STUDENT_MARKS DECIMAL(10,3))
BEGIN
INSERT INTO STUDENT VALUES(SID,NAME,COLLEGE_NAME,STUDENT_MARKS);
SELECT "DATA ADDED SUCESSFULLY";
SELECT * FROM STUDENT;
END
//

CALL add_student(1,'Nitheesh','VTU',100);
call add_student(2,'Dhoni','Team India',7);


==================================================================================================
TO CALL THE CREATED PROCEDURE FOR EXECUTION
DELIMETER;-- CHANGE THE DELIMETER BACK TO;
CALL procedure_name(param_value);




ORACLE:
======
CREATE PROCEDURE procedure_name
(
 in|
 out|
 inout parameters
)
IS
BEIGN
--query
END;
/
----TO CALL THE CREATED PROCEDURE FOR EXCECUTION 
EXECUTE procedure_name(param_value);
============================================

TIGGERS
=======
1) TIGGERS ARE THE ACTION PERFORMMEND BY IMPILICT EXECUTION FROM THE SERVER WHENVEVER DDL OR DML ACTIVITY TAKEN PLACE
2) TRIGGERS CAN BE IMPLEMNTED FOR DML OR DDL.

MYSQL
====
	
SYNTAX:
DELIMITER//--default delimeter is;
CREATE TRIGGER trigger_name BEFORE|AFTER|INSTEAD OF 
INSERT|UPDATE|DELETE ON table_name 
BEGIN
-- query
END;
//
DELIMETER;---CHANGE THE DELIMETER BACK TO;

CREATE THE RECORDS OF  STUDENT.

CREATE TABLE RECORDS
(
 SLNO INT PRIMARY KEY AUTO_INCREMENT,
 SID INT,
 DOJ DATETIME,
 FEES DECIMAL(10,3)
);

DELIMITER //

CREATE TRIGGER student_records AFTER INSERT ON STUDENT FOR EACH ROW
BEGIN 
INSERT INTO RECORDS(SID,DOJ,FEES)VALUES(NEW.ID,SYSDATE(),NEW.MARKS);
END
//


